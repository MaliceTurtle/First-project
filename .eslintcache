[{"C:\\Users\\malic\\myproject\\src\\index.js":"1","C:\\Users\\malic\\myproject\\src\\reportWebVitals.js":"2","C:\\Users\\malic\\myproject\\src\\components\\TodoList.js":"3","C:\\Users\\malic\\myproject\\src\\components\\TodoForm.js":"4","C:\\Users\\malic\\myproject\\src\\components\\Todo.js":"5","C:\\Users\\malic\\myproject\\src\\App.js":"6"},{"size":502,"mtime":1618090317121,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":512,"mtime":1618091323445,"results":"10","hashOfConfig":"8"},{"size":928,"mtime":1618091253655,"results":"11","hashOfConfig":"8"},{"size":947,"mtime":1618091185360,"results":"12","hashOfConfig":"8"},{"size":1303,"mtime":1618092095981,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"3tflk9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"16"},"C:\\Users\\malic\\myproject\\src\\index.js",[],["32","33"],"C:\\Users\\malic\\myproject\\src\\reportWebVitals.js",[],"C:\\Users\\malic\\myproject\\src\\components\\TodoList.js",["34","35"],"import {List} from '@material-ui/core';\r\nimport React from 'react';\r\nimport Todo from \"./Todo\";\r\nfunction TodoList({todos,toggleComplete,removeTodo}){\r\n    var todo\r\n    function handleCheckboxClick(){ \r\n        toggleComplete(todo.id);\r\n      \r\n\r\n    }\r\n    return(\r\n        <List>\r\n            {todos.map(todo => (\r\n                < todo key={todo.id}  todo={todo} toggleComplete={toggleComplete} removeTodo={removeTodo} />\r\n            ))}\r\n            \r\n        </List>\r\n    )\r\n\r\n}\r\nexport default TodoList;","C:\\Users\\malic\\myproject\\src\\components\\TodoForm.js",["36"],"import {Button,TextField} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {v4 as uuid, } from 'uuid';\r\nimport {useState} from 'react';\r\n\r\n\r\nfunction TodoForm({addTodo}) {\r\n    const[todo,setTodo]=useState({\r\n        id: \"\",\r\n        task: \"\",\r\n        completed:false\r\n    });\r\n    function handleTaskInputChange(e){\r\n        setTodo({...todo,task: e.target.value});\r\n    }\r\n    function handleSubmit(e){\r\n        \r\n         e.preventDefault();\r\n         if(todo.task.trim()){\r\n          addTodo({...todo,id:uuid()});   \r\n          setTodo({...todo,task:''}); \r\n         }\r\n    }\r\n    return(\r\n          <form className='todo-form' onSubmit={handleSubmit}>\r\n        <TextField\r\n        label='Task'\r\n        name='task'\r\n        type='text'\r\n        value={todo.task}\r\n        onChange={handleTaskInputChange}/>\r\n\r\n        <button type=\"submit\"> submit</button>\r\n        </form>   );\r\n}\r\nexport default TodoForm;\r\n","C:\\Users\\malic\\myproject\\src\\components\\Todo.js",["37"],"import {Checkbox,IconButton,ListItem,Typography} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/core/icons/Close';\r\nimport React from 'react';\r\nimport TodoList from './TodoList'\r\nfunction Todo({todo,toggleComplete,removeTodo}){\r\n    function handleCheckboxClick(){\r\n        toggleComplete(todo.id);\r\n    }\r\n    function handleRemoveClick(){\r\n        removeTodo(todo.id)\r\n\r\n    }\r\n    return(\r\n        <div>\r\n         <ListItem style={{display:'flex'}}/>\r\n         \r\n        <Checkbox  \r\n        checked={todo.completed} \r\n        \r\n        onClick={handleCheckboxClick} \r\n        />\r\n        \r\n        \r\n        <Typography\r\n        variant=\"body1\"\r\n        style={{\r\n        textDecoration: todo.completed ? 'line-through':null}}>{todo.task} \r\n        </Typography>\r\n       <IconButton> onClick={handleRemoveClick}\r\n       <CloseIcon />\r\n       </IconButton>\r\n        <ListItem/>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Todo;",["38","39"],"C:\\Users\\malic\\myproject\\src\\App.js",["40","41"],"import Typography from '@material-ui/core/Typography';\nimport './App.css';\nimport React,{useState, useEffect} from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nconst LOCAL_STORAGE_KEY='react-todo-list-todos';\n\n\n\n\nfunction App() {\n  const [todos,setTodos]= useState([]);\n  useEffect(() => {\n    const storageTodos=JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos){\n      setTodos(storageTodos);\n\n    }\n  },[]);\n  useEffect(() =>{\n    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(todos));\n\n\n  },[todos]);\n  function addTodo(todo){\n    setTodos([todo, ...todos]);\n  }\n  function toggleComplete(id){\n    setTodos(\n      todos.map(todo =>{\n        if(todo.id==id){\n          return{\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n      })\n    )\n\n  }\n  function removeTodo(id){\n    setTodos(todos.filter(todo =>todo !== id));\n\n  }\n  <Typography style={{padding:16}} variant='body1'>\\\n  </Typography>\n  return (\n    <div className=\"App\">\n      \n      <h1> #example todo</h1> \n      <TodoForm addTodo={addTodo} />\n      <TodoList todos={todos} toggleComplete={toggleComplete}\n      removeTodo={removeTodo}\n       /> \n     \n     \n     \n     \n    </div>\n  );\n  \n}\n\n\n\nexport default App;\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":6,"column":14,"nodeType":"48","messageId":"49","endLine":6,"endColumn":33},{"ruleId":"46","severity":1,"message":"51","line":1,"column":9,"nodeType":"48","messageId":"49","endLine":1,"endColumn":15},{"ruleId":"46","severity":1,"message":"52","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":16},{"ruleId":"42","replacedBy":"53"},{"ruleId":"44","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":30,"column":22,"nodeType":"57","messageId":"58","endLine":30,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":31,"column":19,"nodeType":"61","messageId":"62","endLine":31,"endColumn":21},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Todo' is defined but never used.","Identifier","unusedVar","'handleCheckboxClick' is defined but never used.","'Button' is defined but never used.","'TodoList' is defined but never used.",["63"],["64"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]